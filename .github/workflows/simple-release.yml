name: Simple Release

on:
  workflow_dispatch:
    inputs:
      gluetun_version:
        description: 'Gluetun version to build (e.g., v3.45.0)'
        required: true
        type: string
      docker_tag:
        description: 'Docker tag to use (defaults to Gluetun version)'
        required: false
        type: string
        default: ''

jobs:
  create-release:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: Determine version
      id: version
      run: |
        GLUETUN_VERSION="${{ github.event.inputs.gluetun_version }}"
        DOCKER_TAG="${{ github.event.inputs.docker_tag }}"
        
        # Extract version number without 'v' prefix
        VERSION_NUM=$(echo $GLUETUN_VERSION | sed 's/v//')
        
        # Use provided docker tag or default to Gluetun version
        if [ -z "$DOCKER_TAG" ]; then
          DOCKER_TAG=$VERSION_NUM
        fi
        
        echo "gluetun_version=$GLUETUN_VERSION" >> $GITHUB_OUTPUT
        echo "version_num=$VERSION_NUM" >> $GITHUB_OUTPUT
        echo "docker_tag=$DOCKER_TAG" >> $GITHUB_OUTPUT
        echo "Creating release for Gluetun $GLUETUN_VERSION as Docker tag $DOCKER_TAG"
        
    - name: Update Dockerfile with Gluetun version
      run: |
        GLUETUN_VERSION="${{ steps.version.outputs.gluetun_version }}"
        sed -i "s/ARG GLUETUN_VERSION=.*/ARG GLUETUN_VERSION=$GLUETUN_VERSION/" Dockerfile
        echo "Updated Dockerfile with Gluetun version: $GLUETUN_VERSION"
        
    - name: Create Git tag
      run: |
        DOCKER_TAG="${{ steps.version.outputs.docker_tag }}"
        GLUETUN_VERSION="${{ steps.version.outputs.gluetun_version }}"
        
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        
        # Check if tag already exists
        if git tag -l | grep -q "v$DOCKER_TAG"; then
          echo "Tag v$DOCKER_TAG already exists, deleting it..."
          git tag -d v$DOCKER_TAG
          git push origin :refs/tags/v$DOCKER_TAG || true
        fi
        
        # Create tag
        git tag -a v$DOCKER_TAG -m "Release v$DOCKER_TAG - Gluetun $GLUETUN_VERSION"
        git push origin v$DOCKER_TAG
        
        echo "Created Git tag: v$DOCKER_TAG"
        
    - name: Create GitHub release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ steps.version.outputs.docker_tag }}
        release_name: Release v${{ steps.version.outputs.docker_tag }}
        body: |
          ## Release v${{ steps.version.outputs.docker_tag }}
          
          - Gluetun version: ${{ steps.version.outputs.gluetun_version }}
          - Docker tag: ${{ steps.version.outputs.docker_tag }}
          
          ## Docker Image
          
          ```bash
          docker pull ghcr.io/m2sh/ha-addon-glutun:${{ steps.version.outputs.docker_tag }}
          ```
          
          ## Installation
          
          Add this repository to your Home Assistant addons:
          ```
          https://github.com/m2sh/ha-addon-glutun
          ```
          
          ## Features
          
          - Multi-architecture support (amd64, arm64, armv7, armv6)
          - Web-based configuration interface
          - Support for 25+ VPN providers
          - Shadowsocks and HTTP proxy support
          - DNS over TLS support
        draft: false
        prerelease: false 