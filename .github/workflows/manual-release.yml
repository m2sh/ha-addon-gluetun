name: Manual Release

on:
  workflow_dispatch:
    inputs:
      gluetun_version:
        description: 'Gluetun version to build (e.g., v3.40.0)'
        required: true
        type: string
      docker_tag:
        description: 'Docker tag to use (defaults to Gluetun version)'
        required: false
        type: string
        default: ''

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
      continue-on-error: true
        
    - name: Determine version
      id: version
      run: |
        GLUETUN_VERSION="${{ github.event.inputs.gluetun_version }}"
        DOCKER_TAG="${{ github.event.inputs.docker_tag }}"
        
        # Extract version number without 'v' prefix
        VERSION_NUM=$(echo $GLUETUN_VERSION | sed 's/v//')
        
        # Use provided docker tag or default to Gluetun version
        if [ -z "$DOCKER_TAG" ]; then
          DOCKER_TAG=$VERSION_NUM
        fi
        
        echo "gluetun_version=$GLUETUN_VERSION" >> $GITHUB_OUTPUT
        echo "version_num=$VERSION_NUM" >> $GITHUB_OUTPUT
        echo "docker_tag=$DOCKER_TAG" >> $GITHUB_OUTPUT
        echo "Building Gluetun $GLUETUN_VERSION as Docker tag $DOCKER_TAG"
        
    - name: Update Dockerfile with Gluetun version
      run: |
        GLUETUN_VERSION="${{ steps.version.outputs.gluetun_version }}"
        sed -i "s/ARG GLUETUN_VERSION=.*/ARG GLUETUN_VERSION=$GLUETUN_VERSION/" Dockerfile
        
    - name: Build and push Docker image (multi-arch)
      timeout-minutes: 45
      run: |
        DOCKER_TAG="${{ steps.version.outputs.docker_tag }}"
        
        echo "Building for architectures: linux/amd64, linux/arm64"
        echo "Docker tag: $DOCKER_TAG"
        echo "Registry: ghcr.io/m2sh/ha-addon-glutun"
        
        # Debug: Check Docker buildx setup
        echo "Checking Docker buildx setup..."
        docker buildx ls
        docker buildx inspect --bootstrap
        
        # Debug: Check available resources
        echo "Checking available resources..."
        df -h
        free -h
        
        # Debug: Check if we can access the registry
        echo "Testing registry access..."
        docker pull hello-world:latest || echo "Warning: Could not pull hello-world"
        
        # Debug: Check Dockerfile
        echo "Checking Dockerfile..."
        head -20 Dockerfile
        
        # Build and push for fewer architectures first (for testing)
        echo "Starting multi-arch build..."
        echo "Build start time: $(date)"
        
        # Set buildx to use more memory and parallel builds
        export DOCKER_BUILDKIT=1
        
        docker buildx build --platform linux/amd64,linux/arm64 \
          -t ghcr.io/m2sh/ha-addon-glutun:$DOCKER_TAG \
          -t ghcr.io/m2sh/ha-addon-glutun:latest \
          --push \
          --progress=plain \
          --no-cache .
        
        echo "Build completed successfully at: $(date)"
        
    - name: Delete existing Git tag if present
      run: |
        DOCKER_TAG="${{ steps.version.outputs.docker_tag }}"
        TAG="v$DOCKER_TAG"
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        if git tag -l | grep -q "$TAG"; then
          echo "Tag $TAG already exists, deleting it locally and remotely..."
          git tag -d "$TAG"
          git push origin :refs/tags/$TAG || true
        else
          echo "Tag $TAG does not exist, continuing."
        fi
    - name: Create Git tag
      run: |
        DOCKER_TAG="${{ steps.version.outputs.docker_tag }}"
        GLUETUN_VERSION="${{ steps.version.outputs.gluetun_version }}"
        TAG="v$DOCKER_TAG"
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git tag -a "$TAG" -m "Manual release $TAG - Gluetun $GLUETUN_VERSION"
        git push origin "$TAG"
    - name: Create GitHub release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ steps.version.outputs.docker_tag }}
        release_name: Release v${{ steps.version.outputs.docker_tag }}
        body: |
          ## Manual Release
          
          - Gluetun version: ${{ steps.version.outputs.gluetun_version }}
          - Docker tag: ${{ steps.version.outputs.docker_tag }}
          
          ## Docker Image
          
          ```bash
          docker pull ghcr.io/m2sh/ha-addon-glutun:${{ steps.version.outputs.docker_tag }}
          ```
          
          ## Installation
          
          Add this repository to your Home Assistant addons:
          ```
          https://github.com/m2sh/ha-addon-glutun
          ```
        draft: false
        prerelease: false 